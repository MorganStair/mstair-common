# File: pyproject.toml

[build-system]
    build-backend = "setuptools.build_meta"
    requires      = [ "setuptools>=67", "wheel" ]

[project]
    authors = [ { name = "Morgan Stair" } ]
    dependencies = [
        "bs4",
        "charset_normalizer",
        "click",
        "colorama",
        "diskcache",
        "gitpython",
        "json5",
        "nltk",
        "pytest",
        "python-dotenv",
        "pytz",
        "ruff",
    ]
    description = "Common libraries for mstair projects"
    license = "LicenseRef-Proprietary"
    name = "mstair-common"
    readme = "README.md"
    requires-python = ">=3.13"
    version = "0.1.3"

    [project.optional-dependencies]
        dev = [
            "diskcache-stubs",
            "mypy",
            "pip-tools",
            "pylint",
            "pyright",
            "pytest",
            "ruff",
            "types-colorama",
            "types-python-dateutil",
            "types-pytz",
        ]
        test = [ "pytest", "pytest-cov" ]


[tool.build] # Installed from makefile.mak via pip-tools
    build-base = ".cache/tool-build"


[tool.pip-tools] # For future use with pip-tools
    annotate        = true
    generate-hashes = false
    header          = true
    resolver        = "backtracking"

[tool.poetry.dependencies] # For future use with Poetry
    pyan3  = "1.0.3"
    python = "^3.13"

[tool.pytest.ini_options]
    addopts = "-rNfExXp -q --maxfail=5"
    cache_dir = ".cache/pytest"
    collect_imported_tests = true
    consider_namespace_packages = true
    console_output_style = "classic"
    doctest_encoding = "utf-8"
    doctest_optionflags = "ELLIPSIS FAIL_FAST IGNORE_EXCEPTION_DETAIL NORMALIZE_WHITESPACE REPORT_ONLY_FIRST_FAILURE"
    markers = [
        "e2e: end-to-end tests simulating real user workflows",
        "functional: verifies individual features or behaviors",
        "integration: tests that verify interactions between components",
        "manual: requires human intervention or cannot be automated",
        "regression: ensures previously fixed bugs don't reappear",
        "slow: long-running or resource-intensive tests",
        "unit: fast, isolated tests with no external dependencies",
    ]
    minversion = "8.3"
    norecursedirs = [ "*.egg-info" ]
    testpaths = [ "scripts", "src", "tests" ]

[tool.setuptools]
    package-dir = { "" = "src" }
    [tool.setuptools.packages.find]
        include = [ "mstair", "mstair.*" ]
        where   = [ "src" ]

    [tool.setuptools.package-data]
        "mstair"        = [ "py.typed" ]
        "mstair.common" = [ "**/*.pyi", "*.pyi", "py.typed" ]

[tool.vulture]
    exclude = [
        ".cache",
        ".git",
        ".mypy_cache",
        ".pytest_cache",
        ".ruff_cache",
        ".venv",
        "__pycache__",
        "build",
        "dist",
        "docs",
        "legacy",
        "plib_",
        "tests",
    ]
    ignore_decorators = [
        "@app.route",
        "@classmethod",
        "@dataclass",
        "@deprecate",
        "@property",
        "@pytest.fixture",
    ]
    ignore_names = [
        "_*",
        "is_*",
        "test_*",
    ]
    make_whitelist = false
    min_confidence = 60
    paths = [ "bin", "scripts", "src", "tests", "tools" ]
    sort_by_size = true
    verbose = false

    # End of file: pyproject.toml
