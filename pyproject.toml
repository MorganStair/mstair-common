# File: D:/mstair-common/pyproject.toml
#
# ----------------------------------------------------------
# Project layout overview (for LLMs and maintainers)
#
# PACKAGE LAYOUT CONTEXT
# ----------------------------------------------------------
# The "mstair" directory is now a regular package owned by this project.
# It exposes the `mstair.common` utilities while leaving room for future
# subpackages that can be added to the same repository.
#
# Key implications:
# - The top-level package (`src/mstair/__init__.py`) re-exports `mstair.common`.
# - Type information is shipped inline alongside sources; `py.typed` markers live
#   under both `src/mstair/` and `src/mstair/common/`.
# - Generated stubs should be written directly into `src/mstair/common/` (or types
#   added inline) so that wheels and editable installs expose the same symbols.
#
# ----------------------------------------------------------
# Physical directory structure for this distribution (mstair-common)
# ----------------------------------------------------------
# Root directory structure:
# ├── src/
# │   └── mstair/
# │       ├── __init__.py
# │       ├── py.typed
# │       └── common/
# │           ├── __init__.py
# │           └── py.typed     # Marker for inline typing for mstair.common
# ├── .cache/typings/          # Generated stub directory (not in sdist by default)
# │   └── mstair/              # Generated .pyi stubs mirror src/mstair layout
# ├── makefile.mak             # Main build automation entrypoint
# ├── makefile-rules.mak       # Shared include with shell and path settings
# ├── MANIFEST.in              # Explicit file inclusion rules for source distributions
# ├── setup.py                 # Thin setuptools wrapper (calls setup())
# ├── pyrightconfig.json       # IDE configuration for VS Code / Pylance
# └── requirements*.txt        # Dependency lock and inputs
#
# Build + IDE integration model:
# - Editable install via `pip install -e .`
# - Stubs are generated by `make stubs` into `.cache/typings`
# - Pyright resolves stubs using stubPath=".cache/typings"
# - setuptools only packages files under src/mstair unless stubs are copied there
# ----------------------------------------------------------


[build-system]
    requires = ["setuptools>=65", "wheel"]
    build-backend = "setuptools.build_meta"


[project]
    # ----------------------------------------------------------
    # Core project metadata
    # ----------------------------------------------------------
    name = "mstair-common"
    version = "0.1.0"
    description = "Common libraries for mstair projects"
    authors = [{ name = "Morgan Stair" }]
    readme = "README.md"
    requires-python = ">=3.13"
    license = "MIT"

    # Runtime dependencies used by mstair-common and its submodules
    dependencies = [
        "boto3-stubs[apigateway,apigatewayv2,cloudformation,cloudfront,cognito-identity,cognito-idp,dynamodb,iam,iot,lambda,logs,s3,sts,ssm,stepfunctions,sts,wafv2]>=1.35.0",
        "boto3>=1.35.0",
        "botocore-stubs>=1.35.0",
        "botocore>=1.35.0",
        "charset_normalizer>=3.3.2",
        "click>=8.1.7",
        "colorama>=0.4.6",
        "diskcache>=5.6.1",
        "gitpython>=3.1.43",
        "mypy>=1.10.0",
        "nltk>=3.8.1",
        "pytest",
        "python-dotenv>=1.1.1",
        "pytz",
        "ruff",
        "types-awscrt>=0.21.0",
    ]


[project.optional-dependencies]
    # Optional install groups for local development and testing
    dev = []
    test = []


[tool.build.python]
    # Custom local metadata for development tools
    local_src_dir = "src"
    local_packages = ["mstair"]


[tool.setuptools.packages.find]
    # ----------------------------------------------------------
    # Package discovery configuration
    # Physical source root: src/
    # Include the root package and any subpackages exposed by this distribution.
    # ----------------------------------------------------------
    where = ["src"]
    include = ["mstair", "mstair.*"]


[tool.setuptools.package-data]
    # ----------------------------------------------------------
    # Extra files to include in wheel/sdist for this package
    # Note:
    # - Includes only py.typed for the subpackage mstair.common.
    # - The top-level namespace mstair has no files of its own.
    # - Stubs in .cache/typings are excluded by default unless explicitly copied into src/mstair/.
    # ----------------------------------------------------------
    "mstair" = ["py.typed"]
    "mstair.common" = ["**/*.pyi", "*.pyi", "py.typed"]


[tool.pytest.ini_options]
    # N:reset f:failed E:error s:skipped x:failed X:passed p:passed
    addopts = "-rNfExXp -q --maxfail=5"
    cache_dir = ".pytest_cache"
    # Use classic output style for better readability
    console_output_style = "classic"
    markers = [
        "e2e: end-to-end tests simulating real user workflows",
        "functional: verifies individual features or behaviors",
        "integration: tests that verify interactions between components",
        "manual: requires human intervention or cannot be automated",
        "regression: ensures previously fixed bugs don't reappear",
        "slow: long-running or resource-intensive tests",
        "unit: fast, isolated tests with no external dependencies",
    ]
    minversion = "8.3"
    norecursedirs = []
    pythonpath = []
    testpaths = ["src/*/", "src/*/*/"]
